# -*- coding: utf-8 -*-
"""
Задание 5.2

Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24

Затем вывести информацию о сети и маске в таком формате:

Network:
10        1         1         0
00001010  00000001  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Вывод сети и маски должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)

Подсказка: Получить маску в двоичном формате можно так:
In [1]: "1" * 28 + "0" * 4
Out[1]: '11111111111111111111111111110000'


Ограничение: Все задания надо выполнять используя только пройденные темы.
"""
from turtledemo.penrose import makeshapes

data = input('Введите айпи адрес ')
ip, mask = data.split('/')
ip = ip.split('.')
template = '''Network:
{0:<8}  {1:<8}  {2:<8}  {3:<8}
{0:>08b}  {1:>08b}  {2:>08b}  {3:>08b}
Mask:
/{8}
{4:<8}  {5:<8}  {6:<8}  {7:<8}
{4:>08b}  {5:>08b}  {6:>08b}  {7:>08b}
'''
mask_bin = "1" * int(mask) + "0" * (32 - int(mask))
mask_decimal = [int(mask_bin[:8], 2), int(mask_bin[8:16], 2), int(mask_bin[16:24], 2),
                      int(mask_bin[24:], 2)]
print(template.format(int(ip[0]), int(ip[1]), int(ip[2]), int(ip[3]), mask_decimal[0], mask_decimal[1], mask_decimal[2], mask_decimal[3],
                      int(mask)))
#print(template.format(int(ip[0]), int(ip[1]), int(ip[2]), int(ip[3]), int(mask), int(mask_bin[:8], 2), int(mask_bin[8:16], 2), int(mask_bin[16:24], 2),
                      #int(mask_bin[24:], 2),
                      #(mask_bin[:8]), (mask_bin[8:16]), (mask_bin[16:24]),
                     # (mask_bin[24:])))
